
trigger:
- main

pool:
  name: default

#add group variables
variables:
- group: terraform

#Init terraform
stages:  
- stage: Iinit  
  jobs:  
  - job: init_terraform
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install terraform v.1.2.3'
      inputs:
        terraformVersion: '1.2.3'
    - task: TerraformTaskV3@3
      displayName: 'terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(terraform_folder_path)'
        backendServiceArm: 'azure_cloud'
        backendAzureRmResourceGroupName: '$(terraform_storage_rg)'
        backendAzureRmStorageAccountName: '$(storage_account_name)'
        backendAzureRmContainerName: '$(storage_container_name)'
        backendAzureRmKey: '$(storage_key)'  

# workspaces planning
- stage: Plan  
  jobs:  
  - job: plan_staging_workspace
    #add staging group variables
    variables:   
    - group: staging
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(terraform_folder_path)'
        commandOptions: '-out=$(TF_WORKSPACE)_plan_output -var-file="$(TF_WORKSPACE).tfvars"'
        environmentServiceNameAzureRM: 'azure_cloud'
        
  - job: plan_production_workspace
    #add production group variables
    variables:   
    - group: production
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(terraform_folder_path)'
        commandOptions: '-out=$(TF_WORKSPACE)_plan_output -var-file="$(TF_WORKSPACE).tfvars"'
        environmentServiceNameAzureRM: 'azure_cloud'

- stage: publish       
  jobs: 
  - job: publish_artifact
    steps:      
   # Archive build   
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.Sourcesdirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/weight-tracker-inftastructure-ci-cd.zip'
        replaceExistingArchive: true   

   # publish universak package to artifacts    
    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: 'b14f0775-06f6-43ba-978a-d71515418999/44aef610-b53e-4ba6-bc0f-745d6ed725b7'
        vstsFeedPackagePublish: 'weight-tracker-inftastructure'
        versionOption: 'patch'